/*
 * Varuna Docs
 *
 * PI Project
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package server

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"ChangeDocPermissions",
		strings.ToUpper("Put"),
		"/docs/{docId}/perms",
		ChangeDocPermissions,
	},

	Route{
		"DeleteDocument",
		strings.ToUpper("Delete"),
		"/docs/{docId}/delete",
		DeleteDocument,
	},

	Route{
		"DownloadDocument",
		strings.ToUpper("Get"),
		"/docs/{docId}/download",
		DownloadDocument,
	},

	Route{
		"GetDocPermissions",
		strings.ToUpper("Get"),
		"/docs/{docId}/perms",
		GetDocPermissions,
	},

	Route{
		"GetDocument",
		strings.ToUpper("Get"),
		"/docs/{docId}",
		GetDocument,
	},

	Route{
		"ListRoleDocuments",
		strings.ToUpper("Get"),
		"/roles/{role}/docs",
		ListRoleDocuments,
	},

	Route{
		"UploadDocument",
		strings.ToUpper("Post"),
		"/docs/upload",
		UploadDocument,
	},

	Route{
		"CreateUsers",
		strings.ToUpper("Post"),
		"/users",
		CreateUsers,
	},

	Route{
		"GetUserByName",
		strings.ToUpper("Get"),
		"/users/{username}",
		GetUserByName,
	},

	Route{
		"ListUsers",
		strings.ToUpper("Get"),
		"/users",
		ListUsers,
	},

	Route{
		"ListUsersByRole",
		strings.ToUpper("Get"),
		"/roles/{role}/users",
		ListUsersByRole,
	},

	Route{
		"LoginPost",
		strings.ToUpper("Post"),
		"/login",
		LoginPost,
	},

	Route{
		"RefreshPost",
		strings.ToUpper("Post"),
		"/refresh",
		RefreshPost,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/users/{username}/creds",
		UpdateUser,
	},
}
